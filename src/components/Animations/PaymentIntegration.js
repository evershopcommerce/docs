import * as React from "react";
import { useSpring, animated, useTrail } from "@react-spring/web";

const COD = () => (
  <React.Fragment>
    <g filter="url(#filter0_d_298_1062)">
      <path
        d="M0 16C0 7.16344 7.16344 0 16 0H336V242H16C7.16344 242 0 234.837 0 226V16Z"
        fill="white"
      />
    </g>
    <rect x={22.5} y={23.5} width={19} height={19} rx={9.5} stroke="#E6E8EC" />
    <rect
      x={50.5}
      y={20.5}
      width={36.9167}
      height={25}
      rx={3.5}
      fill="white"
      stroke="#F4F5F6"
    />
    <rect x={22.5} y={23.5} width={19} height={19} rx={9.5} fill="white" />
    <text
      fill="#008060"
      xmlSpace="preserve"
      style={{
        whiteSpace: "pre",
      }}
      fontFamily="Inter"
      fontSize={12}
      fontWeight={600}
      letterSpacing="0em">
      <tspan x={54.8438} y={38.3636}>
        {"COD"}
      </tspan>
    </text>
  </React.Fragment>
);

const Visa = () => (
  <React.Fragment>
    <rect x={122.417} y={23.5} width={19} height={19} rx={9.5} fill="#E5FFF9" />
    <rect
      x={122.417}
      y={23.5}
      width={19}
      height={19}
      rx={9.5}
      stroke="#008060"
    />
    <circle cx={131.917} cy={33} r={4} fill="#008060" />
    <rect
      x={150.417}
      y={20.5}
      width={36.9167}
      height={25}
      rx={3.5}
      fill="white"
      stroke="#F4F5F6"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M169.146 38.5867C167.856 39.7007 166.181 40.3732 164.351 40.3732C160.269 40.3732 156.959 37.025 156.959 32.8949C156.959 28.7648 160.269 25.4167 164.351 25.4167C166.181 25.4167 167.856 26.0892 169.146 27.2031C170.437 26.0892 172.112 25.4167 173.942 25.4167C178.024 25.4167 181.334 28.7648 181.334 32.8949C181.334 37.025 178.024 40.3732 173.942 40.3732C172.112 40.3732 170.437 39.7007 169.146 38.5867Z"
      fill="#ED0006"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M169.146 38.5867C170.736 37.2151 171.744 35.1741 171.744 32.8949C171.744 30.6158 170.736 28.5748 169.146 27.2031C170.437 26.0892 172.112 25.4167 173.942 25.4167C178.024 25.4167 181.334 28.7648 181.334 32.8949C181.334 37.025 178.024 40.3732 173.942 40.3732C172.112 40.3732 170.437 39.7007 169.146 38.5867Z"
      fill="#F9A000"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M169.146 27.2032C170.736 28.5748 171.743 30.6158 171.743 32.8949C171.743 35.1741 170.736 37.215 169.146 38.5867C167.557 37.215 166.549 35.1741 166.549 32.8949C166.549 30.6158 167.557 28.5748 169.146 27.2032Z"
      fill="#FF5E00"
    />
    <rect
      x={196.334}
      y={20.5}
      width={36.9167}
      height={25}
      rx={3.5}
      fill="white"
      stroke="#F4F5F6"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M207.345 37.6131H205.048L203.325 31.0417C203.243 30.7394 203.07 30.4722 202.814 30.3463C202.177 30.0297 201.475 29.7778 200.709 29.6508V29.3978H204.409C204.92 29.3978 205.303 29.7778 205.367 30.2192L206.261 34.9593L208.556 29.3978H210.79L207.345 37.6131ZM212.066 37.6131H209.897L211.683 29.3978H213.853L212.066 37.6131ZM216.659 31.6737C216.723 31.2312 217.106 30.9782 217.553 30.9782C218.255 30.9147 219.02 31.0417 219.659 31.3571L220.042 29.5884C219.403 29.3354 218.701 29.2083 218.064 29.2083C215.958 29.2083 214.426 30.3463 214.426 31.9256C214.426 33.127 215.511 33.7579 216.277 34.1379C217.106 34.5169 217.425 34.7699 217.362 35.1488C217.362 35.7172 216.723 35.9702 216.086 35.9702C215.32 35.9702 214.554 35.7808 213.853 35.4643L213.47 37.2341C214.236 37.5496 215.064 37.6766 215.831 37.6766C218.191 37.739 219.659 36.6022 219.659 34.8958C219.659 32.747 216.659 32.621 216.659 31.6737ZM227.251 37.6131L225.528 29.3978H223.678C223.295 29.3978 222.912 29.6508 222.784 30.0297L219.595 37.6131H221.828L222.274 36.4127H225.017L225.273 37.6131H227.251ZM223.997 31.6102L224.634 34.7064H222.848L223.997 31.6102Z"
      fill="#172B85"
    />
  </React.Fragment>
);

const Paypal = () => (
  <React.Fragment>
    <rect x={268.25} y={23.5} width={19} height={19} rx={9.5} fill="white" />
    <rect
      x={268.25}
      y={23.5}
      width={19}
      height={19}
      rx={9.5}
      stroke="#E6E8EC"
    />
    <rect
      x={296.25}
      y={20.5}
      width={36.9167}
      height={25}
      rx={3.5}
      fill="white"
      stroke="#F4F5F6"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M306.475 36.511H304.79C304.674 36.511 304.576 36.5948 304.558 36.7086L303.877 41.0301C303.863 41.1154 303.929 41.1923 304.016 41.1923H304.82C304.936 41.1923 305.034 41.1084 305.052 40.9944L305.236 39.8288C305.253 39.7147 305.352 39.631 305.467 39.631H306C307.11 39.631 307.751 39.0938 307.918 38.0293C307.994 37.5635 307.922 37.1976 307.703 36.9412C307.464 36.6599 307.039 36.511 306.475 36.511ZM306.669 38.0893C306.577 38.6941 306.115 38.6941 305.668 38.6941H305.414L305.593 37.5647C305.603 37.4965 305.662 37.4462 305.731 37.4462H305.848C306.152 37.4462 306.439 37.4462 306.588 37.6196C306.676 37.7232 306.703 37.8769 306.669 38.0893ZM311.513 38.07H310.706C310.637 38.07 310.577 38.1203 310.567 38.1886L310.531 38.4142L310.475 38.3325C310.3 38.0789 309.91 37.9941 309.522 37.9941C308.63 37.9941 307.868 38.6696 307.72 39.6171C307.643 40.0896 307.752 40.5416 308.02 40.8568C308.266 41.1465 308.618 41.2673 309.037 41.2673C309.755 41.2673 310.154 40.8052 310.154 40.8052L310.118 41.0295C310.104 41.1153 310.17 41.1921 310.256 41.1921H310.983C311.099 41.1921 311.196 41.1083 311.215 40.9943L311.651 38.2321C311.665 38.1472 311.599 38.07 311.513 38.07ZM310.388 39.6407C310.31 40.1017 309.944 40.4112 309.477 40.4112C309.243 40.4112 309.056 40.3361 308.935 40.1936C308.816 40.0522 308.771 39.8509 308.809 39.6267C308.881 39.1695 309.253 38.85 309.713 38.85C309.942 38.85 310.128 38.926 310.251 39.0697C310.374 39.2149 310.423 39.4174 310.388 39.6407ZM315 38.0699H315.811C315.924 38.0699 315.991 38.1972 315.926 38.2904L313.229 42.1838C313.185 42.2469 313.113 42.2844 313.036 42.2844H312.226C312.112 42.2844 312.046 42.156 312.112 42.0626L312.952 40.8771L312.058 38.2556C312.027 38.1645 312.095 38.0699 312.192 38.0699H312.988C313.092 38.0699 313.183 38.1378 313.213 38.2369L313.687 39.8202L314.806 38.1726C314.85 38.1083 314.922 38.0699 315 38.0699Z"
      fill="#253B80"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M323.792 41.0301L324.484 36.6296C324.495 36.5613 324.554 36.511 324.623 36.5107H325.401C325.487 36.5107 325.553 36.5878 325.54 36.6731L324.858 40.9944C324.84 41.1084 324.742 41.1922 324.626 41.1922H323.931C323.845 41.1922 323.779 41.1154 323.792 41.0301ZM318.496 36.511H316.81C316.695 36.511 316.597 36.5948 316.579 36.7086L315.897 41.0301C315.884 41.1154 315.95 41.1922 316.036 41.1922H316.901C316.981 41.1922 317.05 41.1336 317.062 41.0538L317.256 39.8288C317.274 39.7147 317.372 39.631 317.487 39.631H318.02C319.131 39.631 319.771 39.0938 319.939 38.0292C320.014 37.5635 319.942 37.1976 319.724 36.9412C319.484 36.6599 319.06 36.511 318.496 36.511ZM318.69 38.0893C318.598 38.6941 318.136 38.6941 317.689 38.6941H317.435L317.614 37.5647C317.624 37.4965 317.683 37.4462 317.752 37.4462H317.869C318.173 37.4462 318.46 37.4462 318.608 37.6196C318.697 37.7232 318.724 37.8769 318.69 38.0893ZM323.533 38.0699H322.726C322.657 38.0699 322.598 38.1202 322.588 38.1885L322.552 38.4142L322.495 38.3325C322.321 38.0788 321.931 37.9941 321.542 37.9941C320.651 37.9941 319.889 38.6695 319.741 39.6171C319.664 40.0896 319.773 40.5415 320.041 40.8567C320.288 41.1465 320.639 41.2673 321.058 41.2673C321.776 41.2673 322.175 40.8052 322.175 40.8052L322.139 41.0295C322.125 41.1153 322.191 41.1921 322.278 41.1921H323.004C323.119 41.1921 323.218 41.1083 323.236 40.9943L323.672 38.2321C323.685 38.1471 323.619 38.0699 323.533 38.0699ZM322.408 39.6407C322.33 40.1017 321.964 40.4112 321.497 40.4112C321.263 40.4112 321.076 40.3361 320.955 40.1936C320.836 40.0522 320.791 39.8508 320.829 39.6266C320.902 39.1695 321.274 38.8499 321.733 38.8499C321.962 38.8499 322.149 38.926 322.271 39.0697C322.395 39.2149 322.444 39.4174 322.408 39.6407Z"
      fill="#179BD7"
    />
    <path
      d="M312.712 34.965L312.919 33.6491L312.458 33.6383H310.254L311.785 23.9275C311.79 23.8982 311.806 23.8709 311.828 23.8515C311.851 23.832 311.88 23.8214 311.91 23.8214H315.626C316.859 23.8214 317.711 24.0781 318.155 24.5847C318.363 24.8224 318.496 25.0708 318.56 25.3441C318.628 25.631 318.629 25.9736 318.563 26.3916L318.558 26.4221V26.6899L318.767 26.8079C318.942 26.901 319.082 27.0076 319.189 27.1296C319.367 27.3328 319.482 27.5911 319.531 27.8973C319.581 28.2123 319.565 28.587 319.482 29.0113C319.387 29.4994 319.233 29.9244 319.026 30.2723C318.835 30.5927 318.592 30.8585 318.303 31.0646C318.027 31.2602 317.7 31.4088 317.329 31.5039C316.97 31.5973 316.561 31.6445 316.112 31.6445H315.823C315.616 31.6445 315.415 31.719 315.258 31.8525C315.1 31.9888 314.995 32.1749 314.963 32.3786L314.941 32.4971L314.575 34.8164L314.558 34.9016C314.554 34.9286 314.547 34.9421 314.535 34.9512C314.526 34.9594 314.511 34.965 314.497 34.965H312.712Z"
      fill="#253B80"
    />
    <path
      d="M318.964 26.4531C318.953 26.524 318.94 26.5965 318.926 26.671C318.436 29.187 316.76 30.0561 314.618 30.0561H313.528C313.266 30.0561 313.046 30.2462 313.005 30.5045L312.447 34.0446L312.289 35.048C312.262 35.2175 312.393 35.3705 312.564 35.3705H314.498C314.727 35.3705 314.921 35.2041 314.957 34.9783L314.976 34.88L315.34 32.5696L315.364 32.4429C315.399 32.2164 315.594 32.05 315.823 32.05H316.112C317.986 32.05 319.452 31.2894 319.881 29.0883C320.06 28.1688 319.967 27.4011 319.493 26.8612C319.35 26.6983 319.172 26.5632 318.964 26.4531Z"
      fill="#179BD7"
    />
    <path
      d="M318.451 26.2488C318.376 26.227 318.298 26.2072 318.219 26.1894C318.14 26.172 318.058 26.1565 317.974 26.1431C317.68 26.0955 317.358 26.0729 317.013 26.0729H314.1C314.029 26.0729 313.961 26.0892 313.9 26.1185C313.765 26.1831 313.666 26.3102 313.641 26.4659L313.022 30.3902L313.004 30.5047C313.045 30.2464 313.265 30.0562 313.527 30.0562H314.617C316.759 30.0562 318.435 29.1867 318.925 26.6711C318.94 26.5966 318.952 26.5242 318.963 26.4532C318.839 26.3875 318.705 26.3312 318.56 26.2833C318.525 26.2714 318.488 26.2599 318.451 26.2488Z"
      fill="#222D65"
    />
    <path
      d="M313.642 26.4658C313.666 26.3102 313.766 26.183 313.9 26.1188C313.961 26.0895 314.029 26.0733 314.101 26.0733H317.013C317.358 26.0733 317.68 26.0958 317.974 26.1434C318.058 26.1568 318.14 26.1723 318.219 26.1897C318.299 26.2076 318.376 26.2274 318.451 26.2491C318.488 26.2602 318.525 26.2717 318.561 26.2832C318.706 26.3312 318.84 26.3878 318.964 26.4532C319.11 25.5234 318.963 24.8904 318.46 24.3171C317.906 23.6861 316.905 23.4159 315.626 23.4159H311.91C311.648 23.4159 311.425 23.606 311.385 23.8647L309.837 33.6754C309.806 33.8695 309.956 34.0446 310.152 34.0446H312.446L313.022 30.3901L313.642 26.4658Z"
      fill="#253B80"
    />
  </React.Fragment>
);

const PaymentIntegration = (props) => {
  const svgRef = React.useRef();
  const [inView, setInView] = React.useState(false);
  // Set up Intersection Observer
  React.useEffect(() => {
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting) {
          setInView(true);
        } else {
          setInView(false);
        }
      },
      { threshold: 0.5 } // Trigger when at least half the SVG is visible
    );
    if (svgRef.current) observer.observe(svgRef.current);
    return () => observer.disconnect();
  }, []);

  const components = [<COD />, <Visa />, <Paypal />];
  // Set up the staggered animation using useTrail
  const trail = useTrail(components.length, {
    from: { opacity: 0, transform: "translateY(100px)" },
    to: {
      opacity: inView ? 1 : 0,
      transform: inView ? "translateY(0px)" : "translateY(100px)",
    },
    config: { tension: 200, friction: 20 },
    delay: 200, // Delay to add time before the next animation starts
  });
  return (
    <svg
      ref={svgRef}
      viewBox="0 0 336 242"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}>
      <g clipPath="url(#clip0_298_1062)">
        <path
          d="M0 16C0 7.16344 7.16344 0 16 0H336V242H16C7.16344 242 0 234.837 0 226V16Z"
          fill="white"
        />
        <mask
          id="mask0_298_1062"
          style={{
            maskType: "alpha",
          }}
          maskUnits="userSpaceOnUse"
          x={0}
          y={0}
          width={800}
          height={242}>
          <path
            d="M0 25.6C0 16.6392 0 12.1587 1.7439 8.73615C3.27787 5.72556 5.72556 3.27787 8.73615 1.7439C12.1587 0 16.6392 0 25.6 0H800V242H25.6C16.6391 242 12.1587 242 8.73615 240.256C5.72556 238.722 3.27787 236.274 1.7439 233.264C0 229.841 0 225.361 0 216.4V25.6Z"
            fill="url(#paint0_linear_298_1062)"
          />
        </mask>
        <g mask="url(#mask0_298_1062)">
          {trail.map((props, index) => (
            <animated.g
              key={index}
              style={props}
              transform={`translate(0, ${index * 60})`}>
              {components[index]}
            </animated.g>
          ))}
        </g>
        <text
          fill="#687082"
          xmlSpace="preserve"
          style={{
            whiteSpace: "pre",
          }}
          fontFamily="Inter"
          fontSize={13}
          letterSpacing="0em">
          <tspan x={24} y={82.7273}>
            {"Card info"}
          </tspan>
        </text>
        <text
          fill="#101828"
          xmlSpace="preserve"
          style={{
            whiteSpace: "pre",
          }}
          fontFamily="Inter"
          fontSize={14}
          fontWeight={500}
          letterSpacing="0em">
          <tspan x={40} y={118.091}>
            {"1234 5678 1234 5678"}
          </tspan>
        </text>
        <path d="M168 134V174" stroke="#F4F5F6" />
        <path
          d="M24.5 104C24.5 97.6487 29.6487 92.5 36 92.5H300C306.351 92.5 311.5 97.6487 311.5 104V133.5H24.5V104Z"
          stroke="#F4F5F6"
        />
        <path
          d="M24.5 133.5H311.5V163C311.5 169.351 306.351 174.5 300 174.5H36C29.6487 174.5 24.5 169.351 24.5 163V133.5Z"
          stroke="#F4F5F6"
        />
        <text
          fill="#687082"
          xmlSpace="preserve"
          style={{
            whiteSpace: "pre",
          }}
          fontFamily="Inter"
          fontSize={14}
          fontWeight={500}
          letterSpacing="0em">
          <tspan x={40} y={159.091}>
            {"MM/YY"}
          </tspan>
        </text>
        <text
          fill="#687082"
          xmlSpace="preserve"
          style={{
            whiteSpace: "pre",
          }}
          fontFamily="Inter"
          fontSize={14}
          fontWeight={500}
          letterSpacing="0em">
          <tspan x={184} y={159.091}>
            {"CVC"}
          </tspan>
        </text>
        <text
          fill="#687082"
          xmlSpace="preserve"
          style={{
            whiteSpace: "pre",
          }}
          fontFamily="Inter"
          fontSize={13}
          letterSpacing="0em">
          <tspan x={24} y={207.727}>
            {"Name on card"}
          </tspan>
        </text>
        <text
          fill="#101828"
          xmlSpace="preserve"
          style={{
            whiteSpace: "pre",
          }}
          fontFamily="Inter"
          fontSize={14}
          fontWeight={500}
          letterSpacing="0em">
          <tspan x={40} y={243.091}>
            {"Jam,e Bronw"}
          </tspan>
        </text>
        <rect
          x={24.5}
          y={217.5}
          width={287}
          height={41}
          rx={11.5}
          stroke="#F4F5F6"
        />
      </g>
      <defs>
        <filter
          id="filter0_d_298_1062"
          x={-4}
          y={0}
          width={344}
          height={250}
          filterUnits="userSpaceOnUse"
          colorInterpolationFilters="sRGB">
          <feFlood floodOpacity={0} result="BackgroundImageFix" />
          <feColorMatrix
            in="SourceAlpha"
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
            result="hardAlpha"
          />
          <feOffset dy={4} />
          <feGaussianBlur stdDeviation={2} />
          <feComposite in2="hardAlpha" operator="out" />
          <feColorMatrix
            type="matrix"
            values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"
          />
          <feBlend
            mode="normal"
            in2="BackgroundImageFix"
            result="effect1_dropShadow_298_1062"
          />
          <feBlend
            mode="normal"
            in="SourceGraphic"
            in2="effect1_dropShadow_298_1062"
            result="shape"
          />
        </filter>
        <linearGradient
          id="paint0_linear_298_1062"
          x1={400}
          y1={0}
          x2={400}
          y2={242}
          gradientUnits="userSpaceOnUse">
          <stop offset={0.515188} />
          <stop offset={1} stopOpacity={0} />
        </linearGradient>
        <clipPath id="clip0_298_1062">
          <rect width={336} height={242} fill="white" />
        </clipPath>
      </defs>
    </svg>
  );
};
export default PaymentIntegration;
